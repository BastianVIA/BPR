@startuml

class Program {
    
}

package "ServiceExtensions" {
    class NetworkConnection {
        +SetupBackendConnection(services : this IServiceCollection) : IServiceCollection
    }
    class ValidationSettings {
        +AddValidationSettings(services : this IServiceCollection, builder : WebApplicationBuilder) : IServiceCollection
    }
}

Program ..> NetworkConnection
Program ..> ValidationSettings

package "Shared" {
    class MainLayout {
    -body : RadzenBody
    -sidebarExpanded : bool
    }
}

package "Pages" {
    package "View" {
        class PCBAInfo <<page>> {}
    }
    package "ViewModel" {
        class PCBAInfo {
            -pcbaUid : int
            -SearchActuator() : Task
        }
        note right
            Code behind
        end note
    }
}

class ComponentBase {}

package "Components" {
    package "CodeBehind" {
        class SerialNumberInputValidator {
            +RegexText : string
            +RegexPattern : string
            +OnInitialized() : void
        }
        
        class WorkOrderNumberInputValidator {
            +RegexText : string
            +RegexPattern : string
            +OnInitialized() : void
        }
    }
    class SerialNumberInputValidator {}
    class WorkOrderNumberInputValidator {}
}

package "Entities" {
    class Actuator {
        +WorkOrderNumber : int
        +SerialNumber : int
    }
    
    class PCBA {
        +PCBAUid : int
    }
    
    Actuator o-- PCBA : +PCBA
}

package "Model" {
    interface IActuatorDetailsModel {
        +GetActuatorDetails(woNo : int, serialNo : int) : Task<Actuator>
    }
    
    class ActuatorDetailsModel {
        +ActuatorDetailsModel(network : INetworkAdapter)
    }
    
    IActuatorDetailsModel <|.. ActuatorDetailsModel
}

package "Networking" {
    interface INetworkAdapter {
        +GetActuatorDetails(woNo : int, serialNo : int) : Task<GetActuatorDetailsResponse>
    }
    
    class NSwagAdapter {
        +NSwagAdapter(clientFactory : IHttpClientFactory, configuration : IConfiguration)
    }
    
    INetworkAdapter <|.. NSwagAdapter
}

package "Service" {
    package "NSwagService" {
        class Client <<auto-generated>> {
            -_baseUrl : string
            -_httpClient : HttpClient
            -_settings : JsonSerializerSettings      
            +Client(baseUrl : string, httpClient : HttpClient) 
            +GetActuatorDetailsAsync(wONo : int, serialNo : int, cancellationToken : CancellationToken) : Task<GetActuatorDetailsResponse>
        }
        
        class GetActuatorDetailsResponse <<auto-generated>> {
            +PcbaUid : int
        }
        
        Client ..> GetActuatorDetailsResponse
    }
    
    interface IAlertService {
        +FireEvent(type : AlertType)
    }
    
    class AlertService {
        +AlertService(messages : IAlertMessages)
    }
    
    IAlertService <|.. AlertService
    
    class AlertAction <<delegate>> {}
    class OnAlertAction <<event>> {}
    
    AlertService --> AlertAction : +AlertAction
    AlertService --> OnAlertAction : +OnAlertAction
}

package "Events" {
    interface IAlertMessages {
        +ActuatorDetailsSuccess() : Alert
        +ActuatorDetailsFailure() : Alert
    }
    
    class AlertMessages {
    }
    
    IAlertMessages <|.. AlertMessages
    
    class Alert {
        +IsSuccessful : bool
        +Message : string
        +Type : AlertType
    }
    
    enum AlertType {
        ActuatorDetailsSuccess
        ActuatorDetailsFailure
    }
    
    Alert ..> AlertType
    AlertMessages ..> Alert : <<creates>>
}

package Backend <<Node>> {
    class RestAPI {} 
}

Shared.MainLayout ..> Pages.View.PCBAInfo : includes
Pages.View.PCBAInfo ..> Pages.ViewModel.PCBAInfo : inherits
Pages.ViewModel.PCBAInfo --> Actuator : -actuator
Pages.ViewModel.PCBAInfo --> IActuatorDetailsModel : +ActuatorDetailsModel
Pages.ViewModel.PCBAInfo ..> Components.SerialNumberInputValidator : <<includes>>
Pages.ViewModel.PCBAInfo ..> Components.WorkOrderNumberInputValidator : <<includes>>
Components.SerialNumberInputValidator ..> Components.CodeBehind.SerialNumberInputValidator : inherits
Components.WorkOrderNumberInputValidator ..> Components.CodeBehind.WorkOrderNumberInputValidator : inherits
ActuatorDetailsModel --> INetworkAdapter : -_network
NSwagAdapter --> Client : -_client
AlertService --> Events.IAlertMessages : -_messages
NSwagAdapter --> IAlertService : -_alertService
Client ..> Backend
note right on link
    RESTful
end note
Program ..> IActuatorDetailsModel
Program ..> IAlertMessages
Program ..> IAlertService
Pages.ViewModel.PCBAInfo --|> ComponentBase
Components.CodeBehind.SerialNumberInputValidator --|> ComponentBase
Components.CodeBehind.WorkOrderNumberInputValidator --|> ComponentBase

@enduml