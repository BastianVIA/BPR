@startuml

package "Pages (view, viewmodel)"{
    class PCBAInfo{
        -pcbaUid : int
        -SearchActuator() : Task
    }
}

package "Components"{
    class SerialNumberInputValidator{
        +RegexText : string
        +RegexPattern : string
        +OnInitialized() : void
    }
    
    class WorkOrderNumberInputValidator{
        +RegexText : string
        +RegexPattern : string
        +OnInitialized() : void
    }
}

package "Entities"{
    class Actuator{
        +WorkOrderNumber : int
        +SerialNumber : int
    }
    
    class PCBA{
    +PCBAUid : int
    }
    
    Actuator --> PCBA
}

package "Model"{
    interface IActuatorDetailsModel{
        +GetActuatorDetails(int woNo, int serialNo) : Task<Actuator>
    }
    
    class ActuatorDetailsModel{
        +ActuatorDetailsModel(INetworkAdapter network)
    }
    
    IActuatorDetailsModel <|-- ActuatorDetailsModel
}

package "Core"{
    interface INetworkAdapter{
        +GetActuatorDetails(int woNo, int serialNo) : Task<GetActuatorDetailsResponse>
    }
    
    class NSwagAdapter{
        +NSwagAdapter(IHttpClientFactory clientFactory, IConfiguration configuration)
    }
    
    INetworkAdapter <|-- NSwagAdapter
}

package "Service"{
    package "NSwagService"{
        class Client{
            -_baseUrl : string
            -_httpClient : HttpClient
            -_settings : JsonSerializerSettings      
            +Client(string baseUrl, HttpClient httpClient) 
            +GetActuatorDetailsAsync(int wONo, int serialNo, CancellationToken cancellationToken) : Task<GetActuatorDetailsResponse>
        }
        
        class GetActuatorDetailsResponse{
         +PcbaUid : int
        }
        
        Client --> GetActuatorDetailsResponse
    }
}

PCBAInfo --> Actuator
PCBAInfo --> IActuatorDetailsModel
PCBAInfo ..> SerialNumberInputValidator : includes
PCBAInfo ..> WorkOrderNumberInputValidator : includes
ActuatorDetailsModel --> INetworkAdapter
NSwagAdapter --> Client
Client ..> backend
note right on link
    RESTful
end note

@enduml