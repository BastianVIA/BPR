@startuml
skinparam classAttributeIconSize 0

package Networking {
    interface INetwork {
        +GetActuatorDetails(woNo : int, serialNo : int) : Task<GetActuatorDetailsResponse>
    }
    
    class NSwagProxy {
        +NSwagProxy(clientFactory : IHttpClientFactory, configuration : IConfiguration)
    }
    
    INetwork <|.. NSwagProxy
}
package "Pages (view, viewmodel)" {
    class PCBAInfo {
        -pcbaUid : int
        -SearchActuator() : Task
    }
}

package Models {

}


package "Service" {
    package "NSwagService" {
        class Client <<auto-generated>> {
            -_baseUrl : string
            -_httpClient : HttpClient
            -_settings : JsonSerializerSettings      
            +Client(baseUrl : string, httpClient : HttpClient) 
            +GetActuatorDetailsAsync(wONo : int, serialNo : int, cancellationToken : CancellationToken) : Task<GetActuatorDetailsResponse>
        }
        
        class GetActuatorDetailsResponse <<auto-generated>> {
            +PcbaUid : int
        }
        
        Client ..> GetActuatorDetailsResponse
    }
    
    class AlertService {
            
            }
    interface IAlertService {
    }
    
    IAlertService <|.. AlertService
}

Models --> INetworkAdapter
NSwagProxy --> Client : -_client
NSwagProxy --> IAlertService
PCBAInfo ..> AlertService : Listens to

package Backend{

}

Client ..> Backend
note right on link
    RESTful
end note

@enduml